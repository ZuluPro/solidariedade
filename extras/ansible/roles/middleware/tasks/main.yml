---
- name: Check SSH public key
  local_action: command test -e {{ ssh_public_key_file }}
  register: ssh_public_key_test
  ignore_errors: yes

# user
- name: Create user {{ solidariedade_user }}
  user: name="{{ solidariedade_user }}" shell=/bin/bash home="{{Â solidariedade_home }}"

# - name: Add SSH public key to {{ solidariedade_user }}
#   authorized_key: user={{ solidariedade_user }}
#                   key="{{ lookup('file', ssh_public_key_file) }}"
#   when: ssh_public_key_test.rc == 0 

# solidariedade
- name: Install requirements
  apt: name={{ item }} state=present
  with_items:
    - python
    - python-dev
    - python-setuptools
    - build-essential
    - libmysqlclient-dev
    - libjpeg-dev

- name: Install pip
  easy_install: name=pip

- name: Upgrade pip
  pip: name=pip

- name: Install virtualenv
  pip: name=virtualenv

- name: Install Django Python MySQL and Redis clients
  pip: name={{ item }} virtualenv="{{ solidariedade_venv }}"
  remote_user: "{{ solidariedade_user }}"
  with_items:
    - 'django<1.9'
    - MySQL-python
    - django-redis
    - 'git+http://github.com/ojii/pymaging.git#egg=pymaging'
    - 'git+http://github.com/ojii/pymaging-png.git#egg=pymaging-png'
    - 'git+http://github.com/ZuluPro/django-cv#egg=django-cv'

- name: Git pull blog
  git: repo=https://github.com/ZuluPro/solidariedade.git
       dest=/tmp/src/solidariedade version={{ solidariedade_version }}
  remote_user: "{{ solidariedade_user }}"
  register: git_pull_solidariedade

- name: Install solidariedade requirements
  pip: requirements=/tmp/src/solidariedade/requirements.txt
       virtualenv="{{ solidariedade_venv }}"
  remote_user: "{{ solidariedade_user }}"

- name: Install solidariedade
  shell: "{{ solidariedade_venv }}/bin/python setup.py install"
  args:
     chdir: /tmp/src/solidariedade
  remote_user: "{{ solidariedade_user }}"
  when: git_pull_solidariedade.changed
  notify: restart uwsgi

- name: Get package directory
  shell: "{{ solidariedade_venv }}/bin/solidariedade settings | awk '/BASE_DIR/ {print $3}'"
  remote_user: "{{ solidariedade_user }}"
  register: solidariedade_basedir
  changed_when: False
  environment:
    PATH: "{{ solidariedade_venv }}/bin/:{{ ansible_env.PATH }}"

- name: Setup solidariedade configuration
  template: src=solidariedade.cfg.j2 dest=/etc/solidariedade.cfg mode=0644 owner=root

- name: Create static root directory
  file: dest="{{ static_root }}" state=directory owner={{ solidariedade_user }} group={{ solidariedade_user }}
        mode=0740

- name: Create media root directory
  file: dest="{{ media_root }}" state=directory owner={{ solidariedade_user }} group={{ solidariedade_user }}
        mode=0755

- name: Create backup directory
  file: dest="{{ backup_dir }}" state=directory owner={{ solidariedade_user }} group={{ solidariedade_user }}
        mode=0740

- name: Collect static files
  command: "{{ solidariedade_venv }}/bin/solidariedade collectstatic --noinput"
  remote_user: "{{ solidariedade_user }}"
  register: collectstatic
  run_once: true
  changed_when: "not '0 static files copied to' in collectstatic.stdout"

- name: Deploy database 
  command: "{{ solidariedade_venv }}/bin/solidariedade migrate --noinput"
  remote_user: "{{ solidariedade_user }}"
  register: migration
  changed_when: "not 'No migrations to apply.' in migration.stdout"

# uWSGI
# Remake with supervisord
- name: Install uWSGI
  apt: name={{ item }} state=installed
  with_items:
    - uwsgi
    - uwsgi-plugin-python

- name: Setup solidariedade uWSGI configuration
  template: src=uwsgi.ini.j2 dest=/etc/uwsgi/apps-available/solidariedade.ini
  notify: restart uwsgi

- name: Enable solidariedade uWSGI configuration
  file: src=/etc/uwsgi/apps-available/solidariedade.ini dest=/etc/uwsgi/apps-enabled/solidariedade.ini state=link

# Nginx
- include: ../../common/tasks/install_nginx.yml
- include: ../../common/tasks/install_ssl_key.yml

- name: Setup media Nginx configuration
  template: src=nginx-media.conf.j2 dest=/etc/nginx/sites-available/media-solidariedade.conf
  notify: reload nginx

- name: Enable solidariedade Nginx configuration
  file: src=/etc/nginx/sites-available/media-solidariedade.conf dest=/etc/nginx/sites-enabled/media-solidariedade.conf state=link
  notify: restart nginx

- name: Create www directory
  file: dest="/var/www/solidariedade" state=directory owner=www-data group=www-data
        mode=0744

- name: Add symlink for media files
  file: src={{ media_root }} dest=/var/www/solidariedade/media state=link owner=www-data group=www-data
